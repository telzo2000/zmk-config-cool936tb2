#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        ms_scrl {
            bindings = <&mo 1>;
            key-positions = <29 30>;
            layers = <1>;
        };

        shift_tab {
            bindings = <&kp LS(ESC)>;
            key-positions = <0 1>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        CapsLock {
            bindings = <&kp CAPS>;
            key-positions = <22 23>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W     &kp E     &kp R        &kp T        &mo 1  &kp Y  &kp U      &kp I       &kp O       &kp P  &kp BSPC
&kp A      &kp S     &kp D     &kp F        &kp G        &kp H  &kp J  &kp K      &kp L       &kp ENTER
&kp Z      &kp X     &kp C     &kp V        &kp B        &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp RSHIFT
&kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp N1           &kp N2        &kp N3        &kp N4      &kp N5       &mo 0          &kp N6        &kp N7                &kp N8                 &kp N9      &kp N0  &kp BACKSPACE
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR  &kp PERCENT  &kp AMPERSAND  &kp SQT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER
&kp PLUS         &kp MINUS     &kp ASTERISK  &kp SLASH   &kp EQUAL    &kp TILDE      &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RSHIFT
&kp LCTRL        &kp LEFT_GUI  &kp LALT      &trans      &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&kp F1        &kp F2        &kp F3             &kp F4          &kp F5          &kp N1         &kp F6          &kp F7          &kp F8           &kp F9      &kp F10  &kp BSPC
&kp AT_SIGN   &kp SQT       &kp DOUBLE_QUOTES  &kp SEMICOLON   &kp COLON       &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT        &kp ENTER
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &kp V           &bt BT_CLR_ALL  &kp LC(SPACE)  &kp RG(SPACE)   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RSHIFT
&kp LCTRL     &kp LGUI      &kp LALT           &kp UNDERSCORE  &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        ARROW {
            bindings = <
&kp Q      &kp W     &kp E     &kp R        &kp T        &kp N1  &kp Y  &kp U      &kp I       &kp O       &kp F10  &kp BSPC
&kp A      &kp S     &kp D     &kp F        &kp G        &kp H   &kp J  &kp K      &kp L       &kp ENTER
&kp Z      &kp X     &kp C     &kp V        &kp B        &kp N   &kp M  &kp COMMA  &kp PERIOD  &kp RSHIFT
&kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        MOUSE {
            bindings = <
&kp Q             &kp W         &kp E         &kp R     &kp T     &kp N1  &kp Y  &kp U      &kp I       &kp O            &kp P  &kp BSPC
&kp A             &kp S         &kp D         &kp F     &kp G     &kp H   &kp J  &kp K      &kp L       &kp ENTER
&kp Z             &kp X         &kp C         &kp V     &kp B     &kp N   &kp M  &kp COMMA  &kp PERIOD  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &mkp MB1  &mkp MB2
            >;
        };

        SCROLL {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4       &kp F5       &kp N1  &kp F6  &kp F7     &kp F8      &kp F9      &kp F10  &kp BSPC
&kp A      &kp S     &kp D     &kp F        &kp G        &kp H   &kp J   &kp K      &kp L       &kp ENTER
&kp Z      &kp X     &kp C     &kp V        &kp B        &kp N   &kp M   &kp COMMA  &kp PERIOD  &kp RSHIFT
&kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        layer_6 {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4       &kp F5       &kp N1  &kp F6  &kp F7     &kp F8      &kp F9      &kp F10  &kp BSPC
&kp A      &kp S     &kp D     &kp F        &kp G        &kp H   &kp J   &kp K      &kp L       &kp ENTER
&kp Z      &kp X     &kp C     &kp V        &kp B        &kp N   &kp M   &kp COMMA  &kp PERIOD  &kp RSHIFT
&kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &lt 2 SPACE
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
